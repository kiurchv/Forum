.well
  %ul.nav.nav-list
    - if user_signed_in?
      %li.user-header.clearfix
        = gravatar_image_tag current_user.email, :alt => current_user.name,
          :class => 'userpic img-rounded pull-left',
          :gravatar => { :default => :identicon, :size => 70 }
        %h3= current_user.name
      %li.user-header
        %i.icon.icon-envelope
        =mail_to current_user.email
      %li.user-header
        %i.icon.icon-user
        = current_user.role.capitalize
      %li.divider
      %li
        = link_to edit_user_registration_path do
          %i.icon.icon-cog
          Edit Profile
      %li
        = link_to destroy_user_session_path, :method => :delete do
          %i.icon.icon-arrow-right
          Sign Out
    - else
      %li
        %h3 Welcome!
      - if controller_name != 'sessions'
        %li
          = link_to new_session_path(resource_name) do
            %i.icon.icon-arrow-right
            Sign in
      - if devise_mapping.registerable? and controller_name != 'registrations'
        %li
          = link_to new_registration_path(resource_name) do
            %i.icon.icon-star-empty
            Sign up
      - if devise_mapping.recoverable? and controller_name != 'passwords'
        %li.divider
        %li
          = link_to "Forgot your password?", new_password_path(resource_name)
      - if devise_mapping.confirmable? and controller_name != 'confirmations'
        %li
          = link_to "Didn't receive confirmation instructions?",
            new_confirmation_path(resource_name)
      - if  devise_mapping.lockable?
        and resource_class.unlock_strategy_enabled?(:email)
        and controller_name != 'unlocks'
        %li
          = link_to "Didn't receive unlock instructions?",
            new_unlock_path(resource_name)
      - if devise_mapping.omniauthable?
        %li.didider
        - resource_class.omniauth_providers.each do |provider|
          %li
            = link_to "Sign in with #{provider.to_s.titleize}", 
            omniauth_authorize_path(resource_name, provider)